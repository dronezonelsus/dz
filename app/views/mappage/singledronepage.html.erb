<script src="//maps.google.com/maps/api/js?key=AIzaSyA2b6Qe48bvmxyYCCr1sA1QqrXCG8dJuYk"></script>
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script> <!-- only if you need custom infoboxes -->
<div class="row">
	<div id="map" class="pos col-lg-8 col-md-7 col-sm-12" style='height: 700px;'> 		
		<script type="text/javascript">
			// Declare globally needed variables for the single map marker
			var marker;
			var myLatlng;
			var iconBase;
			var map;
			var mapOptions;

			//Load single marker (drone) on the map
			$(document).ready(function(){
				myLatlng = new google.maps.LatLng(<%= raw flash[:notice]['lat'].to_json %>,<%= raw flash[:notice]['lng'].to_json %>);
				mapOptions = {
				  zoom: 18,
				  center: myLatlng
				}
				map = new google.maps.Map(document.getElementById("map"), mapOptions);
				iconBase = "<%= ActionController::Base.helpers.asset_path('DroneMap.png') %>";
				marker = new google.maps.Marker({
				    position: myLatlng,
				    title:<%= raw flash[:notice]['infowindow'].to_json %>,
				    icon: iconBase
				});
				// To add the marker to the map, call setMap();
				marker.setMap(map);
				//Call ajax auto_load function every 5 seconds to reload marker on map 
				setInterval(auto_load, 5000);
			});

			function createSidebarLi(json){
	    			return ("<li><a>" + json.lat + " " + json.lng + "</a></li>");
	    		};

    		function bindLiToMarker($li, marker){
    			$li.on('click', function(){
    				//handler.getMap().setZoom(14);
    				//marker.panTo();
			        google.maps.event.trigger(marker.getServiceObject(), 'click');
    			})
    		};

    		function createSidebar(json_array){
		      _.each(json_array, function(json){
		        var $li = $( createSidebarLi(json) );	
		        //$("#drone_name").html("");		        
		        //$li.appendTo('#drone_name');
		        bindLiToMarker($li, json.marker);
		      });
		    };

			//Make calls at an interval to reload the map
			function auto_load(){	
				//Ajax function to get marker data from mappage controller : index action 
				$.ajax({
					type: "GET",
					url: "<%= Rails.application.routes.url_helpers.mappage_index_path %>",
					cache: false,
					contentType: 'application/json',
					dataType: "json",
					data: <%= raw @hash.to_json %>,
					success: function(result){  
						//console.log(result);
						//console.log(marker.getTitle());
						for(var i = 0; i < result.length; i++){
							//Precondition: Clicked drone from initial view (mappage#index) is the same as one of the drones on initial view 
							if( result[i]['infowindow'] == marker.getTitle() ){
								//Remove marker icon from map 
								marker.setMap(null);
								//Rebuild map marker with data recieved from mappage controller : index action
								myLatlng = new google.maps.LatLng(result[i]['lat'], result[i]['lng']);
								mapOptions = {
								  zoom: 18,
								  center: myLatlng
								}
								marker = new google.maps.Marker({
								    position: myLatlng,
								    title: result[i]['infowindow'],
								    icon: iconBase
								});
								// To add the marker to the map, call setMap();
								marker.setMap(map);

						 		// _.each(result, function(json, index){
						 		// 	//--### Newly Updated ### ---
									// var marker = markers[index];						
									// google.maps.event.addListener(marker.getServiceObject(), 'dblclick', function(evt) {
									// 	var mydrone = result[index];
									// 	delete mydrone['marker']; //Delete what's causing mydrone to become a circular structure
									// 	var test_array = [];
									// 	test_array.push(mydrone);
									// 	console.log(mydrone);
									// 	string_mydrone = JSON.stringify(mydrone);
									// 	console.log(string_mydrone);
									// 	console.log(test_array);
									// 	// function post_data(){
						  	// 	// 			$.ajax({
						  	// 	// 				url: "<%= Rails.application.routes.url_helpers.mappage_singledronepage_path %>",
						  	// 	// 				type: "POST",
						  	// 	// 				dataType: "json",					  						
						  	// 	// 				contentType: 'application/json',
						  	// 	// 				data: string_mydrone,
						  	// 	// 				cache: false	  						
						  	// 	// 			})
						  	// 	// 		};
						  	// 	// 		post_data();
						  	// 			$.post('<%= Rails.application.routes.url_helpers.mappage_singledronepage_path %>', {string_marker: test_array});
						  	// 			window.open("<%= Rails.application.routes.url_helpers.mappage_singledronepage_path %>");
									// });

							 	// 		//--### ---------------------
							 	// 		var marker = markers[index];
							 	// 		json.marker = marker;
							 	// 		google.maps.event.addListener(marker.getServiceObject(), 'mouseover', function(){
							  //         google.maps.event.trigger(marker.getServiceObject(), 'click');
						   //      });
					 			// });
				 		//createSidebar(result);	
				 		//$("#drone_name").empty();
							}
						}
  					},
  					error: function(XMLHttpResquestm, textStatus, errorThrown){
  						console.log(textStatus, errorThrown);
  					}
    			});	
			};
		</script>
</div>
</div>