<script src="//maps.google.com/maps/api/js?key=AIzaSyA2b6Qe48bvmxyYCCr1sA1QqrXCG8dJuYk"></script>
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script> <!-- only if you need custom infoboxes -->

<!-- -->
<style type="text/css">
	.pos{ border-style: none; }
	.sidebarOne{ 
		height: 700px;
		border-color: #1C2331;
		background-color:#2E2E2E; opacity: 0.9; }
</style>

<p id="notice"><%= notice %></p>

<div class="container body_margin" style="padding:10px; padding-bottom:50px;   /* Set relative to Height of the footer */ ">	
	<!-- <marquee behavior="scroll" direction="left" scrollamount="5"><h3 id="marqueeOne" >Live Tracking in Progress...</h3></marquee> -->
	<div class="row">
		<div class="col-lg-12 col-md-12 col-sm-12 panel" id="divAboveMapOne">
			<p>Live Tracking</p>
		</div>
	</div>
	<div class="row">
  		<div id="map" class="pos col-lg-12 col-md-12 col-sm-12" style='height: 700px;'> 
  			
  			<script type="text/javascript">

  				// Build Google Maps using Gmaps
  				var handler = Gmaps.build('Google', { markers: {}});	
  				var temp_drone_for_search;
				$(document).ready(function(){
					// Load initial markers (drones) on the map by calling the initial_load() function
					initial_load();
					// Call ajax auto_load function every 5 seconds
	    			setInterval(auto_load, 5000);
	    		});

				// Load initial markers (drones) on the map 
				function initial_load(){	
					// Declare Markers array
					markers = [];
					// Ajax to retrieve all drones from mappage controller index action
  					$.ajax({
  						type: "GET",
  						url: "<%= Rails.application.routes.url_helpers.mappage_index_path %>",
  						cache: false,
  						contentType: 'application/json',
  						dataType: "json",
  						data: <%= raw @hash.to_json %>,
  						success: function(result){  
  							handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){					     		markers = handler.addMarkers(result); 			
								handler.bounds.extendWith(markers);
								handler.fitMapToBounds(markers);	

								// Make each drone icon listen to a double-click event and a new browser tab and the event 
								_.each(result, function(json, index){
	  					 			var marker = markers[index];	
	  					 			temp_drone_for_search = marker;
	  					 			//json.marker = marker;
	  					 			// Add mouseover event listener to drones to display infowindow data 
	  					 			google.maps.event.addListener(marker.getServiceObject(), 'mouseover', function(){
							          google.maps.event.trigger(marker.getServiceObject(), 'click');
							        });

									google.maps.event.addListener(marker.getServiceObject(), 'dblclick', function(evt) {
										var mydrone = result[index];
										delete mydrone['marker']; // Delete what's causing mydrone to become a circular structure
										//var test_array = [];
										//test_array.push(mydrone);
										
										// Send (POST) double-clicked drone icon's data to mappage controller : singledronepage action 
						  				//$.post('<%= Rails.application.routes.url_helpers.mappage_singledronepage_path %>', {string_marker: test_array});
						  				// Call sleep function to post double-clicked drone to mappage controller : singledronepage action
						  				sleep();
						  				// sleep function
										function sleep () {
										  setTimeout(openWindowTab, 300); // Set timeout to 3 milliseconds before calling openWindowTab function
										}
										// Open new tab window
										function openWindowTab(){
										    window.open("<%= Rails.application.routes.url_helpers.mappage_singledronepage_path %>" + "?infowindow=" + mydrone['infowindow']);
										};
									});
  					 			});
							});
		  				},
		  				error: function(XMLHttpResquestm, textStatus, errorThrown){
		  					console.log(textStatus, errorThrown);
		  				}
		    		});
	    		};

	    		//Make calls at an interval to reload the map
  				function auto_load(){	
  					$.ajax({
  						type: "GET",
  						url: "<%= Rails.application.routes.url_helpers.mappage_index_path %>",
  						cache: false,
  						contentType: 'application/json',
  						dataType: "json",
  						data: <%= raw @hash.to_json %>,
  						success: function(result){  
  							for(var i = 0; i < markers.length; i++){
  								markers[i].setMap(null);
  								handler.removeMarkers(markers);
  							}
  							markers = [];						
  					 		markers = handler.addMarkers(result);	

  					 		_.each(result, function(json, index){
  					 			//--### Newly Updated ### ---
								var marker = markers[index];	
								temp_drone_for_search = null;
								temp_drone_for_search = marker;
								//json.marker = marker;
  					 			google.maps.event.addListener(marker.getServiceObject(), 'mouseover', function(){
						          google.maps.event.trigger(marker.getServiceObject(), 'click');
						        });					
								google.maps.event.addListener(marker.getServiceObject(), 'dblclick', function(evt) {
									var mydrone = result[index];
									delete mydrone['marker']; //Delete what's causing mydrone to become a circular structure
									//var test_array = [];
									//test_array.push(mydrone);
					  				//$.post('<%= Rails.application.routes.url_helpers.mappage_singledronepage_path %>', {string_marker: test_array});

					  				// Call sleep function to post double-clicked drone to mappage controller : singledronepage action
									sleep();
									// sleep function
									function sleep () {
									  setTimeout(openWindowTab, 300);
									}
									// Open new tab window
									function openWindowTab(){
									    window.open("<%= Rails.application.routes.url_helpers.mappage_singledronepage_path %>" + "?infowindow=" + mydrone['infowindow']);
									};
								});
  					 		});
		  				},
		  				//Log GET request error
		  				error: function(XMLHttpResquestm, textStatus, errorThrown){
		  					console.log(textStatus, errorThrown);
		  				}
		    		});	
				};
				//Function to search single drone by registration number
				function track_flight_on_click(){
					//Get search text value
					var search_drone_name = document.getElementById('reg_number').value;
					//Open new window tab for searched drone
					window.open("<%= Rails.application.routes.url_helpers.mappage_singledronepage_path %>"+"?infowindow="+search_drone_name);
				}

  			</script>
		</div>
	</div>

	<div class="row">	
		<div class="col-lg-12 col-md-12 col-sm-12 bottomDiv">
			<div class="trackYourDrone col-lg-4 col-md-4 col-sm-12 panel">
				<div class="row">
					<div class="enterDroneNum">
						<h4> Quick & Easy Tracking</h4>
					</div>
				</div>
				<div class="row">
					<div class="col-lg-3 col-md-3 col-12">
						<form action="#" onsubmit="return track_flight_on_click();">
							<div id="enterDroneNumBox" class="enterDroneNum">
  								<input type="text" name="droneNumber" id="reg_number" placeholder="Enter Drone Reg. #"><br><br>
  							</div>
  							<div id="trackFlightButton">
 								<input type="submit" value="Track Flight" class="btn btn-danger">
 							</div>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>